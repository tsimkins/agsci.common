<tal:master define="level options/level | python:0;
                    children options/children | nothing;
                    bottomLevel options/bottomLevel | nothing;
                    toggle options/toggle | nothing;
                    supress_icon    python: True;
                    supress_thumb   python: True;
                    thumb_scale nothing"
            i18n:domain="plone">

<metal:main define-macro="nav_main"
       tal:define="portal context/@@plone_portal_state/portal;
                   image_scale portal/@@image_scale">

<tal:navitem repeat="node children">


    <tal:li
        tal:define="show_children   node/show_children;
                    children        node/children;
                    item_url        node/getURL;
                    item_remote_url node/getRemoteUrl;
                    use_remote_url  node/useRemoteUrl | nothing;
                    item_type       node/portal_type;
                    item            node/item;
                    has_thumb       item/getIcon;
                    exclude_from_nav item/exclude_from_nav|nothing;
                    is_current      node/currentItem;
                    is_in_path      node/currentParent;
                    li_class        python:' navTreeCurrentNode' if is_current else '';
                    li_extr_class   python:' navTreeItemInPath' if is_in_path else '';
                    li_folder_class python:' navTreeFolderish' if show_children else '';
                    normalizeString nocall: context/plone_utils/normalizeString;"
        tal:condition="python:bottomLevel &lt;= 0 or level &lt;= bottomLevel">

        <li tal:attributes="class string:navTreeItem visualNoMarker${li_class}${li_extr_class}${li_folder_class} section-${node/normalized_id} dropdown;
                            id string:sidebarNav_${item/UID}">



            <tal:level define="item_class string:state-${node/normalized_review_state};
                                item_type_class python:'contenttype-%s' % normalizeString(item_type) if not supress_icon else '';
                                item_class python:'%s navTreeCurrentItem' % item_class if is_current else item_class"
                        condition="not:exclude_from_nav">



                <a tal:define="display_class python: view.link_class(level, children)"
                   tal:attributes="href  python:item_remote_url if use_remote_url else item_url;
                                   title node/Description;
                                   class string:${item_class}${li_class}${li_extr_class}${li_folder_class} ${item_type_class} ${display_class}">

                    <span tal:replace="string:${node/Title}" />
                </a>

                <button
                    tal:attributes="data-target string:#collapse_${item/UID};
                                    aria-controls string:collapse_${item/UID};
                                    aria-label string:${item/Title} Subnavigation"
                    tal:condition="children"
                    role="button"
                    data-toggle="collapse"
                    aria-expanded="false"
                    aria-haspopup="true" >
                    <span class="d-block d-lg-none text-left"
                        tal:content="string:${node/Title}" />
                    <i class="fa fa-angle-down"></i>
                </button>

                <ul tal:condition="python: children and show_children and bottomLevel and level < bottomLevel or bottomLevel == 0"
                    tal:attributes="data-parent string:#sidebarNav_${item/UID};
                                    id string:collapse_${item/UID};
                                    class string:collapse navTree navTreeLevel${level}">

                    <li class="d-block d-lg-none">
                        <a tal:attributes="href  python:item_remote_url if use_remote_url else item_url;
                                           title node/Description;
                                           class string:${item_class}${li_class}${li_extr_class}${li_folder_class} ${item_type_class}">

                            <span tal:replace="string:${node/Title} Overview" />
                        </a>
                    </li>

                    <li tal:replace="structure python:view.recurse(children=children, level=level+1, bottomLevel=bottomLevel)" />
                </ul>

            </tal:level>

        </li>
    </tal:li>



</tal:navitem>

</metal:main>
</tal:master>
